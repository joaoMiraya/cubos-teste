services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: cubos_user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: cubos_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cubos_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: node_api
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 4000
      DATABASE_URL: postgresql://cubos_user:password@postgres:5432/cubos_db
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: cubos_user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: cubos_db
    ports:
      - "4000:4000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app_network
    command: npm run dev

  app:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react_app
    restart: unless-stopped
    environment:
      - VITE_API_URL=http://localhost:4000
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - api
    networks:
      - app_network
    stdin_open: true
    tty: true
    command: npm run dev

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local